---

- name: Configure mgmt to recieve syslog on UDP and TCP
  replace:
    path: /etc/rsyslog.conf
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - regexp: '#\$ModLoad imudp'
      replace: '$ModLoad imudp'
    - regexp: '#\$UDPServerRun 514'
      replace: '$UDPServerRun 514'
    - regexp: '#\$ModLoad imtcp'
      replace: '$ModLoad imtcp'
    - regexp: '#\$InputTCPServerRun 514'
      replace: '$InputTCPServerRun 514'
  notify: Restart rsyslog

- name: Install influxdb package
  yum:
    name:
      - influxdb
  notify: Restart influxdb

- name: Enable the influxdb service
  service:
    name: influxdb
    state: started
    enabled: true

- name: Add Grafana repository
  yum_repository:
    name: grafana
    description: Grafana
    baseurl: https://packages.grafana.com/oss/rpm
    gpgkey: https://packages.grafana.com/gpg.key

- name: Install grafana package
  yum:
    name:
      - grafana
  notify: Restart grafana

- name: Enable the grafana service
  service:
    name: grafana-server
    state: started
    enabled: true

# TODO move firewalld installation into a separate role
- name: Install firewalld
  package:
    name: firewalld
    state: present

- name: Install python-firewall
  package:
    name: python3-firewall
    state: present

- name: Start service firewalld
  service:
    name: firewalld
    enabled: true
    state: started

- name: Open Grafana port in firewall
  firewalld:
    port: 3000/tcp
    permanent: true
    state: enabled
  notify: Restart firewalld

- name: Check admin password
  uri:
    url: http://localhost:3000/api/admin/settings
    user: admin
    password: "{{ grafana_admin_password }}"
    force_basic_auth: true
  ignore_errors: true
  register: grafana_password

- name: Set admin password
  uri:
    url: http://localhost:3000/api/user/password
    user: admin
    password: admin
    force_basic_auth: true
    method: PUT
    body_format: json
    body: '{ "oldPassword": "admin", "newPassword": "{{ grafana_admin_password }}", "confirmNew": "{{ grafana_admin_password }}"}'
  ignore_errors: '{{ ansible_check_mode }}'
  when: grafana_password.status == 401

- name: Add grafana password to secrets
  lineinfile:
    path: /usr/sbin/get_secrets
    line: echo grafana "{{ grafana_admin_password }}"

- name: Create influxdb telegraf datasource
  grafana_datasource:
    grafana_url: http://localhost:3000
    grafana_user: admin
    grafana_password: "{{ grafana_admin_password }}"
    name: influxdb_telegraf
    ds_type: influxdb
    url: http://localhost:8086
    database: telegraf
  tags:
    - molecule-idempotence-notest  # https://github.com/ansible-collections/community.grafana/issues/127

- name: Install monitor_slurm script
  copy:
    dest: /usr/local/bin/monitor_slurm
    content: |
      #! /bin/bash
      set -euo pipefail
      IFS=$'\n\t'

      data=$(sinfo --noheader --Format=StateLong,Nodes)

      values=""

      for i in $data
      do
        state=$(echo $i | awk '{print $1}')
        count=$(echo $i | awk '{print $2}')
        values+=",${state}=${count}"
      done

      if [[ ! -z "${values}" ]]
      then
        echo "nodestatuscount ${values:1}"
      fi
    mode: a=rx,u+w

- name: Enable slurm monitoring in influx
  ini_file:
    path: /etc/telegraf/telegraf.conf
    section: "[inputs.exec]"
    option: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    mode: u=rw,g=r,o=r
  loop: "{{ keys | dict2items }}"
  vars:
    keys:
      commands: '["/usr/local/bin/monitor_slurm"]'
      timeout: '"5s"'
      name_suffix: '"_slurm"'
      data_format: '"influx"'
  notify: Restart telegraf

- name: Create directory for grafana dashboards
  file:
    path: /etc/citc/grafana
    state: directory
    mode: u=rwx,g=rx,o=rx

- name: Copy in Slurm Grafana dashboard
  template:
    src: slurm_dashboard.json.j2
    dest: /etc/citc/grafana/slurm_dashboard.json
    mode: u=rw,g=r,o=r

- name: Download Telegraf dashboard
  get_url:
    url: https://grafana.com/api/dashboards/928/revisions/3/download
    dest: /etc/citc/grafana/928.json
    mode: u=rw,g=r,o=r
  tags:
    - molecule-idempotence-notest  # We download and then change this file in-place

- name: Set Influx datasource on dashboard
  replace:
    path: /etc/citc/grafana/928.json
    regexp: '\${DS_INFLUXDB_TELEGRAF}'
    replace: 'influxdb_telegraf'

- name: Import dashboard
  copy:
    dest: /etc/grafana/provisioning/dashboards/citc.yaml
    content: |
      apiVersion: 1

      providers:
      - name: 'default'
        orgId: 1
        folder: ''
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10 #how often Grafana will scan for changed dashboards
        options:
          path: /etc/citc/grafana
    mode: u=rw,g=r,o=r
  notify: Restart grafana
